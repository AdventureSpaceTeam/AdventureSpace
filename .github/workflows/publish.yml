name: Publish

concurrency:
  group: publish

on:
  workflow_dispatch:
  schedule:
    - cron: '0 13 */3 * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Install dependencies
      run: sudo apt-get install -y python3-paramiko python3-lxml

    - uses: actions/checkout@v3.6.0
      with:
        submodules: 'recursive'
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3.2.0
      with:
        dotnet-version: 8.0.x

    - name: Get Engine Tag
      run: |
        cd RobustToolbox
        git fetch --depth=1

    - name: Install dependencies
      run: dotnet restore

    - name: Build Packaging
      run: dotnet build Content.Packaging --configuration Release --no-restore /m

#    - name: Package server
#      run: dotnet run --project Content.Packaging server --platform win-x64 --platform linux-x64 --platform osx-x64 --platform linux-arm64

#    - name: Package client
#      run: dotnet run --project Content.Packaging client --no-wipe-release

#    - name: Update Build Info
#      env:
#        FORK_ID: ${{ vars.FORK_ID }}
#      run: Tools/gen_build_info.py

    - name: Package server
      run: dotnet run --project Content.Packaging server --platform linux-x64 --hybrid-acz

    - name: Shuffle files around
      run: |
        mkdir "release/${{ github.sha }}"
        mv release/*.zip "release/${{ github.sha }}"

    - name: Upload files to centcomm
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        source: "release/${{ github.sha }}"
        target: "/var/www/html/builds_dir/builds/"
        strip_components: 1

    - name: Update manifest JSON
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: pwsh /var/www/html/push.ps1 ${{ github.sha }}

#    - name: Publish changelog (Discord)
#      run: Tools/actions_changelogs_since_last_run.py
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        DISCORD_WEBHOOK_URL: ${{ secrets.CHANGELOG_DISCORD_WEBHOOK }}
#        TRANSLATION_API_URL: ${{ secrets.CHANGELOG_TRANSLATION_API_URL }}

#    - name: Publish changelog (RSS)
#      run: Tools/actions_changelog_rss.py
#      env:
#        CHANGELOG_RSS_KEY: ${{ secrets.CHANGELOG_RSS_KEY }}
