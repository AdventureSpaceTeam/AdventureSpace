name: Publish

#concurrency:
#  group: publish

on:
  workflow_dispatch:
  schedule:
  - cron: '0 13 */3 * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
#    - name: Install dependencies
#      run: sudo apt-get install -y python3-paramiko python3-lxml

    - uses: actions/checkout@v4.1.1
      with:
        submodules: 'recursive'

    # Corvax-Secrets-Start
    - name: Setup secrets
      env:
        SSH_KEY: ${{ secrets.SECRETS_PRIVATE_KEY }}
      if: ${{ env.SSH_KEY != '' }}
      run: |
        mkdir ~/.ssh
        echo "${{ secrets.SECRETS_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "HOST *" > ~/.ssh/config
        echo "StrictHostKeyChecking no" >> ~/.ssh/config
        git clone git@github.com:corvax-nexus/secrets.git Secrets
        cp -R Secrets/Resources/Prototypes Resources/Prototypes/CorvaxSecrets
        cp -R Secrets/Resources/ServerPrototypes Resources/Prototypes/CorvaxSecretsServer
        cp -R Secrets/Resources/Locale Resources/Locale/ru-RU/corvax-secrets
        cp -R Secrets/Resources/Textures Resources/Textures/CorvaxSecrets
    # Corvax-Secrets-End

    # (c4llv07e) Adventure private code start
    - name: Download Adventure's private parts
      env:
        TEST_KEY: ${{ secrets.ADV_SSH_DEPLOY_SERVER }}
      if: ${{ env.TEST_KEY != '' }}
      run: |
        eval `ssh-agent -s`
        ssh-add - <<< '${{ secrets.ADV_SSH_DEPLOY_CLIENT }}'
        git submodule add --force git@github.com:AdventureSpaceTeam/PrivateClient.git Content.Client/AdventurePrivate
        ssh-add - <<< '${{ secrets.ADV_SSH_DEPLOY_SERVER }}'
        git submodule add --force git@github.com:AdventureSpaceTeam/PrivateServer.git Content.Server/AdventurePrivate
        ssh-add - <<< '${{ secrets.ADV_SSH_DEPLOY_SHARED }}'
        git submodule add --force git@github.com:AdventureSpaceTeam/PrivateShared.git Content.Shared/AdventurePrivate
    # (c4llv07e) Adventure private code end

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: 8.0.x

    - name: Get Engine Tag
      run: |
        cd RobustToolbox
        git fetch --depth=1

    - name: Install dependencies
      run: dotnet restore

    - name: Build Packaging
      run: dotnet build Content.Packaging --configuration Release --no-restore /m

    - name: Package server
      run: dotnet run --project Content.Packaging server --platform linux-x64 --hybrid-acz

    - name: Shuffle files around
      run: |
        mkdir "release/${{ github.sha }}"
        mv release/*.zip "release/${{ github.sha }}"

    - name: Upload files to centcomm
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        source: "release/${{ github.sha }}"
        target: "/var/www/html/builds_dir/builds/"
        strip_components: 1

    - name: Update manifest JSON
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: pwsh /var/www/html/push.ps1 ${{ github.sha }}

#    - name: Publish changelog (Discord)
#      run: Tools/actions_changelogs_since_last_run.py
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        DISCORD_WEBHOOK_URL: ${{ secrets.CHANGELOG_DISCORD_WEBHOOK }}
#        TRANSLATION_API_URL: ${{ secrets.CHANGELOG_TRANSLATION_API_URL }}

#    - name: Publish changelog (RSS)
#      run: Tools/actions_changelog_rss.py
#      env:
#        CHANGELOG_RSS_KEY: ${{ secrets.CHANGELOG_RSS_KEY }}
