using Content.Corvax.Interfaces.Client;
using Robust.Client.AutoGenerated;
using Robust.Client.Console;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

namespace Content.Client._Alteros.DiscordMember;

[GenerateTypedNameReferences]
public sealed partial class DiscordMemberGui : Control
{
    [Dependency] private readonly IClientDiscordAuthManager _discordAuthManager = default!;
    [Dependency] private readonly IClientConsoleHost _consoleHost = default!;

    public DiscordMemberGui()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        LayoutContainer.SetAnchorPreset(this, LayoutContainer.LayoutPreset.Wide);

        QuitButton.OnPressed += (_) =>
        {
            _consoleHost.ExecuteCommand("quit");
        };

        UrlEdit.TextRope = new Rope.Leaf(_discordAuthManager.DiscordUrl);
        if (_discordAuthManager.DiscordQrcode != null)
        {
            QrCode.Texture = _discordAuthManager.DiscordQrcode;
        }

        if (_discordAuthManager.DiscordUsername != string.Empty)
        {
            DiscordUsername.Text = _discordAuthManager.DiscordUsername;
        }

        OpenUrlButton.OnPressed += (_) =>
        {
            if (_discordAuthManager.DiscordUrl != string.Empty)
            {
                IoCManager.Resolve<IUriOpener>().OpenUri(_discordAuthManager.DiscordUrl);
            }
        };
    }
}
